// Code generated by ent, DO NOT EDIT.

package fill

import (
	"entgo.io/ent/dialect/sql"
	"github.com/yoshiso/hypersync/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldID, id))
}

// Coin applies equality check predicate on the "coin" field. It's identical to CoinEQ.
func Coin(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldCoin, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldAddress, v))
}

// Px applies equality check predicate on the "px" field. It's identical to PxEQ.
func Px(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldPx, v))
}

// Sz applies equality check predicate on the "sz" field. It's identical to SzEQ.
func Sz(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldSz, v))
}

// Side applies equality check predicate on the "side" field. It's identical to SideEQ.
func Side(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldSide, v))
}

// Time applies equality check predicate on the "time" field. It's identical to TimeEQ.
func Time(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldTime, v))
}

// StartPosition applies equality check predicate on the "start_position" field. It's identical to StartPositionEQ.
func StartPosition(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldStartPosition, v))
}

// Dir applies equality check predicate on the "dir" field. It's identical to DirEQ.
func Dir(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldDir, v))
}

// Hash applies equality check predicate on the "hash" field. It's identical to HashEQ.
func Hash(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldHash, v))
}

// Crossed applies equality check predicate on the "crossed" field. It's identical to CrossedEQ.
func Crossed(v bool) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldCrossed, v))
}

// Fee applies equality check predicate on the "fee" field. It's identical to FeeEQ.
func Fee(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldFee, v))
}

// Oid applies equality check predicate on the "oid" field. It's identical to OidEQ.
func Oid(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldOid, v))
}

// Tid applies equality check predicate on the "tid" field. It's identical to TidEQ.
func Tid(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldTid, v))
}

// FeeToken applies equality check predicate on the "fee_token" field. It's identical to FeeTokenEQ.
func FeeToken(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldFeeToken, v))
}

// BuilderFee applies equality check predicate on the "builder_fee" field. It's identical to BuilderFeeEQ.
func BuilderFee(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldBuilderFee, v))
}

// CoinEQ applies the EQ predicate on the "coin" field.
func CoinEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldCoin, v))
}

// CoinNEQ applies the NEQ predicate on the "coin" field.
func CoinNEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldCoin, v))
}

// CoinIn applies the In predicate on the "coin" field.
func CoinIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldCoin, vs...))
}

// CoinNotIn applies the NotIn predicate on the "coin" field.
func CoinNotIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldCoin, vs...))
}

// CoinGT applies the GT predicate on the "coin" field.
func CoinGT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldCoin, v))
}

// CoinGTE applies the GTE predicate on the "coin" field.
func CoinGTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldCoin, v))
}

// CoinLT applies the LT predicate on the "coin" field.
func CoinLT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldCoin, v))
}

// CoinLTE applies the LTE predicate on the "coin" field.
func CoinLTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldCoin, v))
}

// CoinContains applies the Contains predicate on the "coin" field.
func CoinContains(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContains(FieldCoin, v))
}

// CoinHasPrefix applies the HasPrefix predicate on the "coin" field.
func CoinHasPrefix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasPrefix(FieldCoin, v))
}

// CoinHasSuffix applies the HasSuffix predicate on the "coin" field.
func CoinHasSuffix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasSuffix(FieldCoin, v))
}

// CoinEqualFold applies the EqualFold predicate on the "coin" field.
func CoinEqualFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEqualFold(FieldCoin, v))
}

// CoinContainsFold applies the ContainsFold predicate on the "coin" field.
func CoinContainsFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContainsFold(FieldCoin, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContainsFold(FieldAddress, v))
}

// PxEQ applies the EQ predicate on the "px" field.
func PxEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldPx, v))
}

// PxNEQ applies the NEQ predicate on the "px" field.
func PxNEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldPx, v))
}

// PxIn applies the In predicate on the "px" field.
func PxIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldPx, vs...))
}

// PxNotIn applies the NotIn predicate on the "px" field.
func PxNotIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldPx, vs...))
}

// PxGT applies the GT predicate on the "px" field.
func PxGT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldPx, v))
}

// PxGTE applies the GTE predicate on the "px" field.
func PxGTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldPx, v))
}

// PxLT applies the LT predicate on the "px" field.
func PxLT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldPx, v))
}

// PxLTE applies the LTE predicate on the "px" field.
func PxLTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldPx, v))
}

// PxContains applies the Contains predicate on the "px" field.
func PxContains(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContains(FieldPx, v))
}

// PxHasPrefix applies the HasPrefix predicate on the "px" field.
func PxHasPrefix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasPrefix(FieldPx, v))
}

// PxHasSuffix applies the HasSuffix predicate on the "px" field.
func PxHasSuffix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasSuffix(FieldPx, v))
}

// PxEqualFold applies the EqualFold predicate on the "px" field.
func PxEqualFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEqualFold(FieldPx, v))
}

// PxContainsFold applies the ContainsFold predicate on the "px" field.
func PxContainsFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContainsFold(FieldPx, v))
}

// SzEQ applies the EQ predicate on the "sz" field.
func SzEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldSz, v))
}

// SzNEQ applies the NEQ predicate on the "sz" field.
func SzNEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldSz, v))
}

// SzIn applies the In predicate on the "sz" field.
func SzIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldSz, vs...))
}

// SzNotIn applies the NotIn predicate on the "sz" field.
func SzNotIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldSz, vs...))
}

// SzGT applies the GT predicate on the "sz" field.
func SzGT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldSz, v))
}

// SzGTE applies the GTE predicate on the "sz" field.
func SzGTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldSz, v))
}

// SzLT applies the LT predicate on the "sz" field.
func SzLT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldSz, v))
}

// SzLTE applies the LTE predicate on the "sz" field.
func SzLTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldSz, v))
}

// SzContains applies the Contains predicate on the "sz" field.
func SzContains(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContains(FieldSz, v))
}

// SzHasPrefix applies the HasPrefix predicate on the "sz" field.
func SzHasPrefix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasPrefix(FieldSz, v))
}

// SzHasSuffix applies the HasSuffix predicate on the "sz" field.
func SzHasSuffix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasSuffix(FieldSz, v))
}

// SzEqualFold applies the EqualFold predicate on the "sz" field.
func SzEqualFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEqualFold(FieldSz, v))
}

// SzContainsFold applies the ContainsFold predicate on the "sz" field.
func SzContainsFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContainsFold(FieldSz, v))
}

// SideEQ applies the EQ predicate on the "side" field.
func SideEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldSide, v))
}

// SideNEQ applies the NEQ predicate on the "side" field.
func SideNEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldSide, v))
}

// SideIn applies the In predicate on the "side" field.
func SideIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldSide, vs...))
}

// SideNotIn applies the NotIn predicate on the "side" field.
func SideNotIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldSide, vs...))
}

// SideGT applies the GT predicate on the "side" field.
func SideGT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldSide, v))
}

// SideGTE applies the GTE predicate on the "side" field.
func SideGTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldSide, v))
}

// SideLT applies the LT predicate on the "side" field.
func SideLT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldSide, v))
}

// SideLTE applies the LTE predicate on the "side" field.
func SideLTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldSide, v))
}

// SideContains applies the Contains predicate on the "side" field.
func SideContains(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContains(FieldSide, v))
}

// SideHasPrefix applies the HasPrefix predicate on the "side" field.
func SideHasPrefix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasPrefix(FieldSide, v))
}

// SideHasSuffix applies the HasSuffix predicate on the "side" field.
func SideHasSuffix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasSuffix(FieldSide, v))
}

// SideEqualFold applies the EqualFold predicate on the "side" field.
func SideEqualFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEqualFold(FieldSide, v))
}

// SideContainsFold applies the ContainsFold predicate on the "side" field.
func SideContainsFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContainsFold(FieldSide, v))
}

// TimeEQ applies the EQ predicate on the "time" field.
func TimeEQ(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldTime, v))
}

// TimeNEQ applies the NEQ predicate on the "time" field.
func TimeNEQ(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldTime, v))
}

// TimeIn applies the In predicate on the "time" field.
func TimeIn(vs ...int64) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldTime, vs...))
}

// TimeNotIn applies the NotIn predicate on the "time" field.
func TimeNotIn(vs ...int64) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldTime, vs...))
}

// TimeGT applies the GT predicate on the "time" field.
func TimeGT(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldTime, v))
}

// TimeGTE applies the GTE predicate on the "time" field.
func TimeGTE(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldTime, v))
}

// TimeLT applies the LT predicate on the "time" field.
func TimeLT(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldTime, v))
}

// TimeLTE applies the LTE predicate on the "time" field.
func TimeLTE(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldTime, v))
}

// StartPositionEQ applies the EQ predicate on the "start_position" field.
func StartPositionEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldStartPosition, v))
}

// StartPositionNEQ applies the NEQ predicate on the "start_position" field.
func StartPositionNEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldStartPosition, v))
}

// StartPositionIn applies the In predicate on the "start_position" field.
func StartPositionIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldStartPosition, vs...))
}

// StartPositionNotIn applies the NotIn predicate on the "start_position" field.
func StartPositionNotIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldStartPosition, vs...))
}

// StartPositionGT applies the GT predicate on the "start_position" field.
func StartPositionGT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldStartPosition, v))
}

// StartPositionGTE applies the GTE predicate on the "start_position" field.
func StartPositionGTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldStartPosition, v))
}

// StartPositionLT applies the LT predicate on the "start_position" field.
func StartPositionLT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldStartPosition, v))
}

// StartPositionLTE applies the LTE predicate on the "start_position" field.
func StartPositionLTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldStartPosition, v))
}

// StartPositionContains applies the Contains predicate on the "start_position" field.
func StartPositionContains(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContains(FieldStartPosition, v))
}

// StartPositionHasPrefix applies the HasPrefix predicate on the "start_position" field.
func StartPositionHasPrefix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasPrefix(FieldStartPosition, v))
}

// StartPositionHasSuffix applies the HasSuffix predicate on the "start_position" field.
func StartPositionHasSuffix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasSuffix(FieldStartPosition, v))
}

// StartPositionEqualFold applies the EqualFold predicate on the "start_position" field.
func StartPositionEqualFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEqualFold(FieldStartPosition, v))
}

// StartPositionContainsFold applies the ContainsFold predicate on the "start_position" field.
func StartPositionContainsFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContainsFold(FieldStartPosition, v))
}

// DirEQ applies the EQ predicate on the "dir" field.
func DirEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldDir, v))
}

// DirNEQ applies the NEQ predicate on the "dir" field.
func DirNEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldDir, v))
}

// DirIn applies the In predicate on the "dir" field.
func DirIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldDir, vs...))
}

// DirNotIn applies the NotIn predicate on the "dir" field.
func DirNotIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldDir, vs...))
}

// DirGT applies the GT predicate on the "dir" field.
func DirGT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldDir, v))
}

// DirGTE applies the GTE predicate on the "dir" field.
func DirGTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldDir, v))
}

// DirLT applies the LT predicate on the "dir" field.
func DirLT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldDir, v))
}

// DirLTE applies the LTE predicate on the "dir" field.
func DirLTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldDir, v))
}

// DirContains applies the Contains predicate on the "dir" field.
func DirContains(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContains(FieldDir, v))
}

// DirHasPrefix applies the HasPrefix predicate on the "dir" field.
func DirHasPrefix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasPrefix(FieldDir, v))
}

// DirHasSuffix applies the HasSuffix predicate on the "dir" field.
func DirHasSuffix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasSuffix(FieldDir, v))
}

// DirEqualFold applies the EqualFold predicate on the "dir" field.
func DirEqualFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEqualFold(FieldDir, v))
}

// DirContainsFold applies the ContainsFold predicate on the "dir" field.
func DirContainsFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContainsFold(FieldDir, v))
}

// HashEQ applies the EQ predicate on the "hash" field.
func HashEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldHash, v))
}

// HashNEQ applies the NEQ predicate on the "hash" field.
func HashNEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldHash, v))
}

// HashIn applies the In predicate on the "hash" field.
func HashIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldHash, vs...))
}

// HashNotIn applies the NotIn predicate on the "hash" field.
func HashNotIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldHash, vs...))
}

// HashGT applies the GT predicate on the "hash" field.
func HashGT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldHash, v))
}

// HashGTE applies the GTE predicate on the "hash" field.
func HashGTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldHash, v))
}

// HashLT applies the LT predicate on the "hash" field.
func HashLT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldHash, v))
}

// HashLTE applies the LTE predicate on the "hash" field.
func HashLTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldHash, v))
}

// HashContains applies the Contains predicate on the "hash" field.
func HashContains(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContains(FieldHash, v))
}

// HashHasPrefix applies the HasPrefix predicate on the "hash" field.
func HashHasPrefix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasPrefix(FieldHash, v))
}

// HashHasSuffix applies the HasSuffix predicate on the "hash" field.
func HashHasSuffix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasSuffix(FieldHash, v))
}

// HashEqualFold applies the EqualFold predicate on the "hash" field.
func HashEqualFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEqualFold(FieldHash, v))
}

// HashContainsFold applies the ContainsFold predicate on the "hash" field.
func HashContainsFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContainsFold(FieldHash, v))
}

// CrossedEQ applies the EQ predicate on the "crossed" field.
func CrossedEQ(v bool) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldCrossed, v))
}

// CrossedNEQ applies the NEQ predicate on the "crossed" field.
func CrossedNEQ(v bool) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldCrossed, v))
}

// FeeEQ applies the EQ predicate on the "fee" field.
func FeeEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldFee, v))
}

// FeeNEQ applies the NEQ predicate on the "fee" field.
func FeeNEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldFee, v))
}

// FeeIn applies the In predicate on the "fee" field.
func FeeIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldFee, vs...))
}

// FeeNotIn applies the NotIn predicate on the "fee" field.
func FeeNotIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldFee, vs...))
}

// FeeGT applies the GT predicate on the "fee" field.
func FeeGT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldFee, v))
}

// FeeGTE applies the GTE predicate on the "fee" field.
func FeeGTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldFee, v))
}

// FeeLT applies the LT predicate on the "fee" field.
func FeeLT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldFee, v))
}

// FeeLTE applies the LTE predicate on the "fee" field.
func FeeLTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldFee, v))
}

// FeeContains applies the Contains predicate on the "fee" field.
func FeeContains(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContains(FieldFee, v))
}

// FeeHasPrefix applies the HasPrefix predicate on the "fee" field.
func FeeHasPrefix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasPrefix(FieldFee, v))
}

// FeeHasSuffix applies the HasSuffix predicate on the "fee" field.
func FeeHasSuffix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasSuffix(FieldFee, v))
}

// FeeEqualFold applies the EqualFold predicate on the "fee" field.
func FeeEqualFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEqualFold(FieldFee, v))
}

// FeeContainsFold applies the ContainsFold predicate on the "fee" field.
func FeeContainsFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContainsFold(FieldFee, v))
}

// OidEQ applies the EQ predicate on the "oid" field.
func OidEQ(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldOid, v))
}

// OidNEQ applies the NEQ predicate on the "oid" field.
func OidNEQ(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldOid, v))
}

// OidIn applies the In predicate on the "oid" field.
func OidIn(vs ...int64) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldOid, vs...))
}

// OidNotIn applies the NotIn predicate on the "oid" field.
func OidNotIn(vs ...int64) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldOid, vs...))
}

// OidGT applies the GT predicate on the "oid" field.
func OidGT(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldOid, v))
}

// OidGTE applies the GTE predicate on the "oid" field.
func OidGTE(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldOid, v))
}

// OidLT applies the LT predicate on the "oid" field.
func OidLT(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldOid, v))
}

// OidLTE applies the LTE predicate on the "oid" field.
func OidLTE(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldOid, v))
}

// TidEQ applies the EQ predicate on the "tid" field.
func TidEQ(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldTid, v))
}

// TidNEQ applies the NEQ predicate on the "tid" field.
func TidNEQ(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldTid, v))
}

// TidIn applies the In predicate on the "tid" field.
func TidIn(vs ...int64) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldTid, vs...))
}

// TidNotIn applies the NotIn predicate on the "tid" field.
func TidNotIn(vs ...int64) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldTid, vs...))
}

// TidGT applies the GT predicate on the "tid" field.
func TidGT(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldTid, v))
}

// TidGTE applies the GTE predicate on the "tid" field.
func TidGTE(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldTid, v))
}

// TidLT applies the LT predicate on the "tid" field.
func TidLT(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldTid, v))
}

// TidLTE applies the LTE predicate on the "tid" field.
func TidLTE(v int64) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldTid, v))
}

// FeeTokenEQ applies the EQ predicate on the "fee_token" field.
func FeeTokenEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldFeeToken, v))
}

// FeeTokenNEQ applies the NEQ predicate on the "fee_token" field.
func FeeTokenNEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldFeeToken, v))
}

// FeeTokenIn applies the In predicate on the "fee_token" field.
func FeeTokenIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldFeeToken, vs...))
}

// FeeTokenNotIn applies the NotIn predicate on the "fee_token" field.
func FeeTokenNotIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldFeeToken, vs...))
}

// FeeTokenGT applies the GT predicate on the "fee_token" field.
func FeeTokenGT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldFeeToken, v))
}

// FeeTokenGTE applies the GTE predicate on the "fee_token" field.
func FeeTokenGTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldFeeToken, v))
}

// FeeTokenLT applies the LT predicate on the "fee_token" field.
func FeeTokenLT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldFeeToken, v))
}

// FeeTokenLTE applies the LTE predicate on the "fee_token" field.
func FeeTokenLTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldFeeToken, v))
}

// FeeTokenContains applies the Contains predicate on the "fee_token" field.
func FeeTokenContains(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContains(FieldFeeToken, v))
}

// FeeTokenHasPrefix applies the HasPrefix predicate on the "fee_token" field.
func FeeTokenHasPrefix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasPrefix(FieldFeeToken, v))
}

// FeeTokenHasSuffix applies the HasSuffix predicate on the "fee_token" field.
func FeeTokenHasSuffix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasSuffix(FieldFeeToken, v))
}

// FeeTokenEqualFold applies the EqualFold predicate on the "fee_token" field.
func FeeTokenEqualFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEqualFold(FieldFeeToken, v))
}

// FeeTokenContainsFold applies the ContainsFold predicate on the "fee_token" field.
func FeeTokenContainsFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContainsFold(FieldFeeToken, v))
}

// BuilderFeeEQ applies the EQ predicate on the "builder_fee" field.
func BuilderFeeEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEQ(FieldBuilderFee, v))
}

// BuilderFeeNEQ applies the NEQ predicate on the "builder_fee" field.
func BuilderFeeNEQ(v string) predicate.Fill {
	return predicate.Fill(sql.FieldNEQ(FieldBuilderFee, v))
}

// BuilderFeeIn applies the In predicate on the "builder_fee" field.
func BuilderFeeIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldIn(FieldBuilderFee, vs...))
}

// BuilderFeeNotIn applies the NotIn predicate on the "builder_fee" field.
func BuilderFeeNotIn(vs ...string) predicate.Fill {
	return predicate.Fill(sql.FieldNotIn(FieldBuilderFee, vs...))
}

// BuilderFeeGT applies the GT predicate on the "builder_fee" field.
func BuilderFeeGT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGT(FieldBuilderFee, v))
}

// BuilderFeeGTE applies the GTE predicate on the "builder_fee" field.
func BuilderFeeGTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldGTE(FieldBuilderFee, v))
}

// BuilderFeeLT applies the LT predicate on the "builder_fee" field.
func BuilderFeeLT(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLT(FieldBuilderFee, v))
}

// BuilderFeeLTE applies the LTE predicate on the "builder_fee" field.
func BuilderFeeLTE(v string) predicate.Fill {
	return predicate.Fill(sql.FieldLTE(FieldBuilderFee, v))
}

// BuilderFeeContains applies the Contains predicate on the "builder_fee" field.
func BuilderFeeContains(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContains(FieldBuilderFee, v))
}

// BuilderFeeHasPrefix applies the HasPrefix predicate on the "builder_fee" field.
func BuilderFeeHasPrefix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasPrefix(FieldBuilderFee, v))
}

// BuilderFeeHasSuffix applies the HasSuffix predicate on the "builder_fee" field.
func BuilderFeeHasSuffix(v string) predicate.Fill {
	return predicate.Fill(sql.FieldHasSuffix(FieldBuilderFee, v))
}

// BuilderFeeIsNil applies the IsNil predicate on the "builder_fee" field.
func BuilderFeeIsNil() predicate.Fill {
	return predicate.Fill(sql.FieldIsNull(FieldBuilderFee))
}

// BuilderFeeNotNil applies the NotNil predicate on the "builder_fee" field.
func BuilderFeeNotNil() predicate.Fill {
	return predicate.Fill(sql.FieldNotNull(FieldBuilderFee))
}

// BuilderFeeEqualFold applies the EqualFold predicate on the "builder_fee" field.
func BuilderFeeEqualFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldEqualFold(FieldBuilderFee, v))
}

// BuilderFeeContainsFold applies the ContainsFold predicate on the "builder_fee" field.
func BuilderFeeContainsFold(v string) predicate.Fill {
	return predicate.Fill(sql.FieldContainsFold(FieldBuilderFee, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Fill) predicate.Fill {
	return predicate.Fill(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Fill) predicate.Fill {
	return predicate.Fill(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Fill) predicate.Fill {
	return predicate.Fill(sql.NotPredicates(p))
}
