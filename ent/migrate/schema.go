// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// FillsColumns holds the columns for the "fills" table.
	FillsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "coin", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "px", Type: field.TypeString},
		{Name: "sz", Type: field.TypeString},
		{Name: "side", Type: field.TypeString},
		{Name: "time", Type: field.TypeInt64},
		{Name: "start_position", Type: field.TypeString},
		{Name: "dir", Type: field.TypeString},
		{Name: "hash", Type: field.TypeString},
		{Name: "crossed", Type: field.TypeBool},
		{Name: "fee", Type: field.TypeString},
		{Name: "oid", Type: field.TypeInt64},
		{Name: "tid", Type: field.TypeInt64, Unique: true},
		{Name: "fee_token", Type: field.TypeString},
		{Name: "builder_fee", Type: field.TypeString, Nullable: true},
	}
	// FillsTable holds the schema information for the "fills" table.
	FillsTable = &schema.Table{
		Name:       "fills",
		Columns:    FillsColumns,
		PrimaryKey: []*schema.Column{FillsColumns[0]},
	}
	// FundingsColumns holds the columns for the "fundings" table.
	FundingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "time", Type: field.TypeInt64},
		{Name: "coin", Type: field.TypeString},
		{Name: "usdc", Type: field.TypeString},
		{Name: "szi", Type: field.TypeString},
		{Name: "funding_rate", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
	}
	// FundingsTable holds the schema information for the "fundings" table.
	FundingsTable = &schema.Table{
		Name:       "fundings",
		Columns:    FundingsColumns,
		PrimaryKey: []*schema.Column{FundingsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "funding_address_time_coin",
				Unique:  true,
				Columns: []*schema.Column{FundingsColumns[6], FundingsColumns[1], FundingsColumns[2]},
			},
		},
	}
	// RewardsClaimsColumns holds the columns for the "rewards_claims" table.
	RewardsClaimsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "amount", Type: field.TypeString},
		{Name: "time", Type: field.TypeInt64},
		{Name: "address", Type: field.TypeString},
	}
	// RewardsClaimsTable holds the schema information for the "rewards_claims" table.
	RewardsClaimsTable = &schema.Table{
		Name:       "rewards_claims",
		Columns:    RewardsClaimsColumns,
		PrimaryKey: []*schema.Column{RewardsClaimsColumns[0]},
	}
	// SpotGenesesColumns holds the columns for the "spot_geneses" table.
	SpotGenesesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "coin", Type: field.TypeString},
		{Name: "amount", Type: field.TypeString},
		{Name: "time", Type: field.TypeInt64},
		{Name: "address", Type: field.TypeString},
	}
	// SpotGenesesTable holds the schema information for the "spot_geneses" table.
	SpotGenesesTable = &schema.Table{
		Name:       "spot_geneses",
		Columns:    SpotGenesesColumns,
		PrimaryKey: []*schema.Column{SpotGenesesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		FillsTable,
		FundingsTable,
		RewardsClaimsTable,
		SpotGenesesTable,
	}
)

func init() {
}
