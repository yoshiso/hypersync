// Code generated by ent, DO NOT EDIT.

package spottransfer

import (
	"entgo.io/ent/dialect/sql"
	"github.com/yoshiso/hypersync/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLTE(FieldID, id))
}

// User applies equality check predicate on the "user" field. It's identical to UserEQ.
func User(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldUser, v))
}

// Destination applies equality check predicate on the "destination" field. It's identical to DestinationEQ.
func Destination(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldDestination, v))
}

// Token applies equality check predicate on the "token" field. It's identical to TokenEQ.
func Token(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldToken, v))
}

// Amount applies equality check predicate on the "amount" field. It's identical to AmountEQ.
func Amount(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldAmount, v))
}

// Fee applies equality check predicate on the "fee" field. It's identical to FeeEQ.
func Fee(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldFee, v))
}

// Time applies equality check predicate on the "time" field. It's identical to TimeEQ.
func Time(v int64) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldTime, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldAddress, v))
}

// UserEQ applies the EQ predicate on the "user" field.
func UserEQ(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldUser, v))
}

// UserNEQ applies the NEQ predicate on the "user" field.
func UserNEQ(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNEQ(FieldUser, v))
}

// UserIn applies the In predicate on the "user" field.
func UserIn(vs ...string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldIn(FieldUser, vs...))
}

// UserNotIn applies the NotIn predicate on the "user" field.
func UserNotIn(vs ...string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNotIn(FieldUser, vs...))
}

// UserGT applies the GT predicate on the "user" field.
func UserGT(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGT(FieldUser, v))
}

// UserGTE applies the GTE predicate on the "user" field.
func UserGTE(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGTE(FieldUser, v))
}

// UserLT applies the LT predicate on the "user" field.
func UserLT(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLT(FieldUser, v))
}

// UserLTE applies the LTE predicate on the "user" field.
func UserLTE(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLTE(FieldUser, v))
}

// UserContains applies the Contains predicate on the "user" field.
func UserContains(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldContains(FieldUser, v))
}

// UserHasPrefix applies the HasPrefix predicate on the "user" field.
func UserHasPrefix(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldHasPrefix(FieldUser, v))
}

// UserHasSuffix applies the HasSuffix predicate on the "user" field.
func UserHasSuffix(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldHasSuffix(FieldUser, v))
}

// UserEqualFold applies the EqualFold predicate on the "user" field.
func UserEqualFold(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEqualFold(FieldUser, v))
}

// UserContainsFold applies the ContainsFold predicate on the "user" field.
func UserContainsFold(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldContainsFold(FieldUser, v))
}

// DestinationEQ applies the EQ predicate on the "destination" field.
func DestinationEQ(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldDestination, v))
}

// DestinationNEQ applies the NEQ predicate on the "destination" field.
func DestinationNEQ(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNEQ(FieldDestination, v))
}

// DestinationIn applies the In predicate on the "destination" field.
func DestinationIn(vs ...string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldIn(FieldDestination, vs...))
}

// DestinationNotIn applies the NotIn predicate on the "destination" field.
func DestinationNotIn(vs ...string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNotIn(FieldDestination, vs...))
}

// DestinationGT applies the GT predicate on the "destination" field.
func DestinationGT(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGT(FieldDestination, v))
}

// DestinationGTE applies the GTE predicate on the "destination" field.
func DestinationGTE(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGTE(FieldDestination, v))
}

// DestinationLT applies the LT predicate on the "destination" field.
func DestinationLT(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLT(FieldDestination, v))
}

// DestinationLTE applies the LTE predicate on the "destination" field.
func DestinationLTE(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLTE(FieldDestination, v))
}

// DestinationContains applies the Contains predicate on the "destination" field.
func DestinationContains(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldContains(FieldDestination, v))
}

// DestinationHasPrefix applies the HasPrefix predicate on the "destination" field.
func DestinationHasPrefix(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldHasPrefix(FieldDestination, v))
}

// DestinationHasSuffix applies the HasSuffix predicate on the "destination" field.
func DestinationHasSuffix(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldHasSuffix(FieldDestination, v))
}

// DestinationEqualFold applies the EqualFold predicate on the "destination" field.
func DestinationEqualFold(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEqualFold(FieldDestination, v))
}

// DestinationContainsFold applies the ContainsFold predicate on the "destination" field.
func DestinationContainsFold(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldContainsFold(FieldDestination, v))
}

// TokenEQ applies the EQ predicate on the "token" field.
func TokenEQ(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldToken, v))
}

// TokenNEQ applies the NEQ predicate on the "token" field.
func TokenNEQ(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNEQ(FieldToken, v))
}

// TokenIn applies the In predicate on the "token" field.
func TokenIn(vs ...string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldIn(FieldToken, vs...))
}

// TokenNotIn applies the NotIn predicate on the "token" field.
func TokenNotIn(vs ...string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNotIn(FieldToken, vs...))
}

// TokenGT applies the GT predicate on the "token" field.
func TokenGT(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGT(FieldToken, v))
}

// TokenGTE applies the GTE predicate on the "token" field.
func TokenGTE(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGTE(FieldToken, v))
}

// TokenLT applies the LT predicate on the "token" field.
func TokenLT(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLT(FieldToken, v))
}

// TokenLTE applies the LTE predicate on the "token" field.
func TokenLTE(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLTE(FieldToken, v))
}

// TokenContains applies the Contains predicate on the "token" field.
func TokenContains(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldContains(FieldToken, v))
}

// TokenHasPrefix applies the HasPrefix predicate on the "token" field.
func TokenHasPrefix(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldHasPrefix(FieldToken, v))
}

// TokenHasSuffix applies the HasSuffix predicate on the "token" field.
func TokenHasSuffix(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldHasSuffix(FieldToken, v))
}

// TokenEqualFold applies the EqualFold predicate on the "token" field.
func TokenEqualFold(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEqualFold(FieldToken, v))
}

// TokenContainsFold applies the ContainsFold predicate on the "token" field.
func TokenContainsFold(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldContainsFold(FieldToken, v))
}

// AmountEQ applies the EQ predicate on the "amount" field.
func AmountEQ(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldAmount, v))
}

// AmountNEQ applies the NEQ predicate on the "amount" field.
func AmountNEQ(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNEQ(FieldAmount, v))
}

// AmountIn applies the In predicate on the "amount" field.
func AmountIn(vs ...string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldIn(FieldAmount, vs...))
}

// AmountNotIn applies the NotIn predicate on the "amount" field.
func AmountNotIn(vs ...string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNotIn(FieldAmount, vs...))
}

// AmountGT applies the GT predicate on the "amount" field.
func AmountGT(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGT(FieldAmount, v))
}

// AmountGTE applies the GTE predicate on the "amount" field.
func AmountGTE(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGTE(FieldAmount, v))
}

// AmountLT applies the LT predicate on the "amount" field.
func AmountLT(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLT(FieldAmount, v))
}

// AmountLTE applies the LTE predicate on the "amount" field.
func AmountLTE(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLTE(FieldAmount, v))
}

// AmountContains applies the Contains predicate on the "amount" field.
func AmountContains(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldContains(FieldAmount, v))
}

// AmountHasPrefix applies the HasPrefix predicate on the "amount" field.
func AmountHasPrefix(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldHasPrefix(FieldAmount, v))
}

// AmountHasSuffix applies the HasSuffix predicate on the "amount" field.
func AmountHasSuffix(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldHasSuffix(FieldAmount, v))
}

// AmountEqualFold applies the EqualFold predicate on the "amount" field.
func AmountEqualFold(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEqualFold(FieldAmount, v))
}

// AmountContainsFold applies the ContainsFold predicate on the "amount" field.
func AmountContainsFold(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldContainsFold(FieldAmount, v))
}

// FeeEQ applies the EQ predicate on the "fee" field.
func FeeEQ(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldFee, v))
}

// FeeNEQ applies the NEQ predicate on the "fee" field.
func FeeNEQ(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNEQ(FieldFee, v))
}

// FeeIn applies the In predicate on the "fee" field.
func FeeIn(vs ...string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldIn(FieldFee, vs...))
}

// FeeNotIn applies the NotIn predicate on the "fee" field.
func FeeNotIn(vs ...string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNotIn(FieldFee, vs...))
}

// FeeGT applies the GT predicate on the "fee" field.
func FeeGT(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGT(FieldFee, v))
}

// FeeGTE applies the GTE predicate on the "fee" field.
func FeeGTE(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGTE(FieldFee, v))
}

// FeeLT applies the LT predicate on the "fee" field.
func FeeLT(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLT(FieldFee, v))
}

// FeeLTE applies the LTE predicate on the "fee" field.
func FeeLTE(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLTE(FieldFee, v))
}

// FeeContains applies the Contains predicate on the "fee" field.
func FeeContains(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldContains(FieldFee, v))
}

// FeeHasPrefix applies the HasPrefix predicate on the "fee" field.
func FeeHasPrefix(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldHasPrefix(FieldFee, v))
}

// FeeHasSuffix applies the HasSuffix predicate on the "fee" field.
func FeeHasSuffix(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldHasSuffix(FieldFee, v))
}

// FeeEqualFold applies the EqualFold predicate on the "fee" field.
func FeeEqualFold(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEqualFold(FieldFee, v))
}

// FeeContainsFold applies the ContainsFold predicate on the "fee" field.
func FeeContainsFold(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldContainsFold(FieldFee, v))
}

// TimeEQ applies the EQ predicate on the "time" field.
func TimeEQ(v int64) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldTime, v))
}

// TimeNEQ applies the NEQ predicate on the "time" field.
func TimeNEQ(v int64) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNEQ(FieldTime, v))
}

// TimeIn applies the In predicate on the "time" field.
func TimeIn(vs ...int64) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldIn(FieldTime, vs...))
}

// TimeNotIn applies the NotIn predicate on the "time" field.
func TimeNotIn(vs ...int64) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNotIn(FieldTime, vs...))
}

// TimeGT applies the GT predicate on the "time" field.
func TimeGT(v int64) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGT(FieldTime, v))
}

// TimeGTE applies the GTE predicate on the "time" field.
func TimeGTE(v int64) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGTE(FieldTime, v))
}

// TimeLT applies the LT predicate on the "time" field.
func TimeLT(v int64) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLT(FieldTime, v))
}

// TimeLTE applies the LTE predicate on the "time" field.
func TimeLTE(v int64) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLTE(FieldTime, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.FieldContainsFold(FieldAddress, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SpotTransfer) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SpotTransfer) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SpotTransfer) predicate.SpotTransfer {
	return predicate.SpotTransfer(sql.NotPredicates(p))
}
