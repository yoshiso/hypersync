// Code generated by ent, DO NOT EDIT.

package vaultwithdrawal

import (
	"entgo.io/ent/dialect/sql"
	"github.com/yoshiso/hypersync/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLTE(FieldID, id))
}

// Vault applies equality check predicate on the "vault" field. It's identical to VaultEQ.
func Vault(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldVault, v))
}

// User applies equality check predicate on the "user" field. It's identical to UserEQ.
func User(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldUser, v))
}

// RequestedUsd applies equality check predicate on the "requested_usd" field. It's identical to RequestedUsdEQ.
func RequestedUsd(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldRequestedUsd, v))
}

// Commission applies equality check predicate on the "commission" field. It's identical to CommissionEQ.
func Commission(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldCommission, v))
}

// ClosingCost applies equality check predicate on the "closing_cost" field. It's identical to ClosingCostEQ.
func ClosingCost(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldClosingCost, v))
}

// Basis applies equality check predicate on the "basis" field. It's identical to BasisEQ.
func Basis(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldBasis, v))
}

// NetWithdrawnUsd applies equality check predicate on the "net_withdrawn_usd" field. It's identical to NetWithdrawnUsdEQ.
func NetWithdrawnUsd(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldNetWithdrawnUsd, v))
}

// Time applies equality check predicate on the "time" field. It's identical to TimeEQ.
func Time(v int64) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldTime, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldAddress, v))
}

// VaultEQ applies the EQ predicate on the "vault" field.
func VaultEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldVault, v))
}

// VaultNEQ applies the NEQ predicate on the "vault" field.
func VaultNEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNEQ(FieldVault, v))
}

// VaultIn applies the In predicate on the "vault" field.
func VaultIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldIn(FieldVault, vs...))
}

// VaultNotIn applies the NotIn predicate on the "vault" field.
func VaultNotIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNotIn(FieldVault, vs...))
}

// VaultGT applies the GT predicate on the "vault" field.
func VaultGT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGT(FieldVault, v))
}

// VaultGTE applies the GTE predicate on the "vault" field.
func VaultGTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGTE(FieldVault, v))
}

// VaultLT applies the LT predicate on the "vault" field.
func VaultLT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLT(FieldVault, v))
}

// VaultLTE applies the LTE predicate on the "vault" field.
func VaultLTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLTE(FieldVault, v))
}

// VaultContains applies the Contains predicate on the "vault" field.
func VaultContains(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContains(FieldVault, v))
}

// VaultHasPrefix applies the HasPrefix predicate on the "vault" field.
func VaultHasPrefix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasPrefix(FieldVault, v))
}

// VaultHasSuffix applies the HasSuffix predicate on the "vault" field.
func VaultHasSuffix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasSuffix(FieldVault, v))
}

// VaultEqualFold applies the EqualFold predicate on the "vault" field.
func VaultEqualFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEqualFold(FieldVault, v))
}

// VaultContainsFold applies the ContainsFold predicate on the "vault" field.
func VaultContainsFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContainsFold(FieldVault, v))
}

// UserEQ applies the EQ predicate on the "user" field.
func UserEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldUser, v))
}

// UserNEQ applies the NEQ predicate on the "user" field.
func UserNEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNEQ(FieldUser, v))
}

// UserIn applies the In predicate on the "user" field.
func UserIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldIn(FieldUser, vs...))
}

// UserNotIn applies the NotIn predicate on the "user" field.
func UserNotIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNotIn(FieldUser, vs...))
}

// UserGT applies the GT predicate on the "user" field.
func UserGT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGT(FieldUser, v))
}

// UserGTE applies the GTE predicate on the "user" field.
func UserGTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGTE(FieldUser, v))
}

// UserLT applies the LT predicate on the "user" field.
func UserLT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLT(FieldUser, v))
}

// UserLTE applies the LTE predicate on the "user" field.
func UserLTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLTE(FieldUser, v))
}

// UserContains applies the Contains predicate on the "user" field.
func UserContains(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContains(FieldUser, v))
}

// UserHasPrefix applies the HasPrefix predicate on the "user" field.
func UserHasPrefix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasPrefix(FieldUser, v))
}

// UserHasSuffix applies the HasSuffix predicate on the "user" field.
func UserHasSuffix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasSuffix(FieldUser, v))
}

// UserEqualFold applies the EqualFold predicate on the "user" field.
func UserEqualFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEqualFold(FieldUser, v))
}

// UserContainsFold applies the ContainsFold predicate on the "user" field.
func UserContainsFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContainsFold(FieldUser, v))
}

// RequestedUsdEQ applies the EQ predicate on the "requested_usd" field.
func RequestedUsdEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldRequestedUsd, v))
}

// RequestedUsdNEQ applies the NEQ predicate on the "requested_usd" field.
func RequestedUsdNEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNEQ(FieldRequestedUsd, v))
}

// RequestedUsdIn applies the In predicate on the "requested_usd" field.
func RequestedUsdIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldIn(FieldRequestedUsd, vs...))
}

// RequestedUsdNotIn applies the NotIn predicate on the "requested_usd" field.
func RequestedUsdNotIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNotIn(FieldRequestedUsd, vs...))
}

// RequestedUsdGT applies the GT predicate on the "requested_usd" field.
func RequestedUsdGT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGT(FieldRequestedUsd, v))
}

// RequestedUsdGTE applies the GTE predicate on the "requested_usd" field.
func RequestedUsdGTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGTE(FieldRequestedUsd, v))
}

// RequestedUsdLT applies the LT predicate on the "requested_usd" field.
func RequestedUsdLT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLT(FieldRequestedUsd, v))
}

// RequestedUsdLTE applies the LTE predicate on the "requested_usd" field.
func RequestedUsdLTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLTE(FieldRequestedUsd, v))
}

// RequestedUsdContains applies the Contains predicate on the "requested_usd" field.
func RequestedUsdContains(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContains(FieldRequestedUsd, v))
}

// RequestedUsdHasPrefix applies the HasPrefix predicate on the "requested_usd" field.
func RequestedUsdHasPrefix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasPrefix(FieldRequestedUsd, v))
}

// RequestedUsdHasSuffix applies the HasSuffix predicate on the "requested_usd" field.
func RequestedUsdHasSuffix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasSuffix(FieldRequestedUsd, v))
}

// RequestedUsdEqualFold applies the EqualFold predicate on the "requested_usd" field.
func RequestedUsdEqualFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEqualFold(FieldRequestedUsd, v))
}

// RequestedUsdContainsFold applies the ContainsFold predicate on the "requested_usd" field.
func RequestedUsdContainsFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContainsFold(FieldRequestedUsd, v))
}

// CommissionEQ applies the EQ predicate on the "commission" field.
func CommissionEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldCommission, v))
}

// CommissionNEQ applies the NEQ predicate on the "commission" field.
func CommissionNEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNEQ(FieldCommission, v))
}

// CommissionIn applies the In predicate on the "commission" field.
func CommissionIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldIn(FieldCommission, vs...))
}

// CommissionNotIn applies the NotIn predicate on the "commission" field.
func CommissionNotIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNotIn(FieldCommission, vs...))
}

// CommissionGT applies the GT predicate on the "commission" field.
func CommissionGT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGT(FieldCommission, v))
}

// CommissionGTE applies the GTE predicate on the "commission" field.
func CommissionGTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGTE(FieldCommission, v))
}

// CommissionLT applies the LT predicate on the "commission" field.
func CommissionLT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLT(FieldCommission, v))
}

// CommissionLTE applies the LTE predicate on the "commission" field.
func CommissionLTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLTE(FieldCommission, v))
}

// CommissionContains applies the Contains predicate on the "commission" field.
func CommissionContains(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContains(FieldCommission, v))
}

// CommissionHasPrefix applies the HasPrefix predicate on the "commission" field.
func CommissionHasPrefix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasPrefix(FieldCommission, v))
}

// CommissionHasSuffix applies the HasSuffix predicate on the "commission" field.
func CommissionHasSuffix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasSuffix(FieldCommission, v))
}

// CommissionEqualFold applies the EqualFold predicate on the "commission" field.
func CommissionEqualFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEqualFold(FieldCommission, v))
}

// CommissionContainsFold applies the ContainsFold predicate on the "commission" field.
func CommissionContainsFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContainsFold(FieldCommission, v))
}

// ClosingCostEQ applies the EQ predicate on the "closing_cost" field.
func ClosingCostEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldClosingCost, v))
}

// ClosingCostNEQ applies the NEQ predicate on the "closing_cost" field.
func ClosingCostNEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNEQ(FieldClosingCost, v))
}

// ClosingCostIn applies the In predicate on the "closing_cost" field.
func ClosingCostIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldIn(FieldClosingCost, vs...))
}

// ClosingCostNotIn applies the NotIn predicate on the "closing_cost" field.
func ClosingCostNotIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNotIn(FieldClosingCost, vs...))
}

// ClosingCostGT applies the GT predicate on the "closing_cost" field.
func ClosingCostGT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGT(FieldClosingCost, v))
}

// ClosingCostGTE applies the GTE predicate on the "closing_cost" field.
func ClosingCostGTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGTE(FieldClosingCost, v))
}

// ClosingCostLT applies the LT predicate on the "closing_cost" field.
func ClosingCostLT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLT(FieldClosingCost, v))
}

// ClosingCostLTE applies the LTE predicate on the "closing_cost" field.
func ClosingCostLTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLTE(FieldClosingCost, v))
}

// ClosingCostContains applies the Contains predicate on the "closing_cost" field.
func ClosingCostContains(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContains(FieldClosingCost, v))
}

// ClosingCostHasPrefix applies the HasPrefix predicate on the "closing_cost" field.
func ClosingCostHasPrefix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasPrefix(FieldClosingCost, v))
}

// ClosingCostHasSuffix applies the HasSuffix predicate on the "closing_cost" field.
func ClosingCostHasSuffix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasSuffix(FieldClosingCost, v))
}

// ClosingCostEqualFold applies the EqualFold predicate on the "closing_cost" field.
func ClosingCostEqualFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEqualFold(FieldClosingCost, v))
}

// ClosingCostContainsFold applies the ContainsFold predicate on the "closing_cost" field.
func ClosingCostContainsFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContainsFold(FieldClosingCost, v))
}

// BasisEQ applies the EQ predicate on the "basis" field.
func BasisEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldBasis, v))
}

// BasisNEQ applies the NEQ predicate on the "basis" field.
func BasisNEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNEQ(FieldBasis, v))
}

// BasisIn applies the In predicate on the "basis" field.
func BasisIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldIn(FieldBasis, vs...))
}

// BasisNotIn applies the NotIn predicate on the "basis" field.
func BasisNotIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNotIn(FieldBasis, vs...))
}

// BasisGT applies the GT predicate on the "basis" field.
func BasisGT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGT(FieldBasis, v))
}

// BasisGTE applies the GTE predicate on the "basis" field.
func BasisGTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGTE(FieldBasis, v))
}

// BasisLT applies the LT predicate on the "basis" field.
func BasisLT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLT(FieldBasis, v))
}

// BasisLTE applies the LTE predicate on the "basis" field.
func BasisLTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLTE(FieldBasis, v))
}

// BasisContains applies the Contains predicate on the "basis" field.
func BasisContains(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContains(FieldBasis, v))
}

// BasisHasPrefix applies the HasPrefix predicate on the "basis" field.
func BasisHasPrefix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasPrefix(FieldBasis, v))
}

// BasisHasSuffix applies the HasSuffix predicate on the "basis" field.
func BasisHasSuffix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasSuffix(FieldBasis, v))
}

// BasisEqualFold applies the EqualFold predicate on the "basis" field.
func BasisEqualFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEqualFold(FieldBasis, v))
}

// BasisContainsFold applies the ContainsFold predicate on the "basis" field.
func BasisContainsFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContainsFold(FieldBasis, v))
}

// NetWithdrawnUsdEQ applies the EQ predicate on the "net_withdrawn_usd" field.
func NetWithdrawnUsdEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldNetWithdrawnUsd, v))
}

// NetWithdrawnUsdNEQ applies the NEQ predicate on the "net_withdrawn_usd" field.
func NetWithdrawnUsdNEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNEQ(FieldNetWithdrawnUsd, v))
}

// NetWithdrawnUsdIn applies the In predicate on the "net_withdrawn_usd" field.
func NetWithdrawnUsdIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldIn(FieldNetWithdrawnUsd, vs...))
}

// NetWithdrawnUsdNotIn applies the NotIn predicate on the "net_withdrawn_usd" field.
func NetWithdrawnUsdNotIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNotIn(FieldNetWithdrawnUsd, vs...))
}

// NetWithdrawnUsdGT applies the GT predicate on the "net_withdrawn_usd" field.
func NetWithdrawnUsdGT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGT(FieldNetWithdrawnUsd, v))
}

// NetWithdrawnUsdGTE applies the GTE predicate on the "net_withdrawn_usd" field.
func NetWithdrawnUsdGTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGTE(FieldNetWithdrawnUsd, v))
}

// NetWithdrawnUsdLT applies the LT predicate on the "net_withdrawn_usd" field.
func NetWithdrawnUsdLT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLT(FieldNetWithdrawnUsd, v))
}

// NetWithdrawnUsdLTE applies the LTE predicate on the "net_withdrawn_usd" field.
func NetWithdrawnUsdLTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLTE(FieldNetWithdrawnUsd, v))
}

// NetWithdrawnUsdContains applies the Contains predicate on the "net_withdrawn_usd" field.
func NetWithdrawnUsdContains(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContains(FieldNetWithdrawnUsd, v))
}

// NetWithdrawnUsdHasPrefix applies the HasPrefix predicate on the "net_withdrawn_usd" field.
func NetWithdrawnUsdHasPrefix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasPrefix(FieldNetWithdrawnUsd, v))
}

// NetWithdrawnUsdHasSuffix applies the HasSuffix predicate on the "net_withdrawn_usd" field.
func NetWithdrawnUsdHasSuffix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasSuffix(FieldNetWithdrawnUsd, v))
}

// NetWithdrawnUsdEqualFold applies the EqualFold predicate on the "net_withdrawn_usd" field.
func NetWithdrawnUsdEqualFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEqualFold(FieldNetWithdrawnUsd, v))
}

// NetWithdrawnUsdContainsFold applies the ContainsFold predicate on the "net_withdrawn_usd" field.
func NetWithdrawnUsdContainsFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContainsFold(FieldNetWithdrawnUsd, v))
}

// TimeEQ applies the EQ predicate on the "time" field.
func TimeEQ(v int64) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldTime, v))
}

// TimeNEQ applies the NEQ predicate on the "time" field.
func TimeNEQ(v int64) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNEQ(FieldTime, v))
}

// TimeIn applies the In predicate on the "time" field.
func TimeIn(vs ...int64) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldIn(FieldTime, vs...))
}

// TimeNotIn applies the NotIn predicate on the "time" field.
func TimeNotIn(vs ...int64) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNotIn(FieldTime, vs...))
}

// TimeGT applies the GT predicate on the "time" field.
func TimeGT(v int64) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGT(FieldTime, v))
}

// TimeGTE applies the GTE predicate on the "time" field.
func TimeGTE(v int64) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGTE(FieldTime, v))
}

// TimeLT applies the LT predicate on the "time" field.
func TimeLT(v int64) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLT(FieldTime, v))
}

// TimeLTE applies the LTE predicate on the "time" field.
func TimeLTE(v int64) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLTE(FieldTime, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.FieldContainsFold(FieldAddress, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.VaultWithdrawal) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.VaultWithdrawal) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.VaultWithdrawal) predicate.VaultWithdrawal {
	return predicate.VaultWithdrawal(sql.NotPredicates(p))
}
